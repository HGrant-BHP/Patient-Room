<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dashboard</title>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="stylesheet" href="/css/main.css">
</head>
<body>
    <!-- Hidden element to store userId for client-side access -->
    <span id="userId" style="display: none;">{{userId}}</span>

    <div class="min-h-screen bg-[#0A0F1E] relative overflow-hidden">
        <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1542314831-068cd1dbfeeb?auto=format&amp;fit=crop&amp;q=80')] bg-cover bg-center opacity-[0.03]"></div>
        <div class="absolute inset-0 bg-gradient-to-br from-[#0A0F1E] via-transparent to-[#1A1F2E] opacity-80"></div>
        <div class="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(37,38,44,0.2)_0%,rgba(10,15,30,0.4)_100%)]"></div>
        <div class="absolute inset-0 opacity-10">
            <div class="absolute inset-0 bg-gradient-to-r from-[#D4AF37]/20 via-transparent to-[#D4AF37]/20 animate-gradient"></div>
        </div>
        <div class="relative z-10">
            <div class="w-full bg-[#111827]/40 backdrop-blur-md border-b border-white/5">
                <div class="container mx-auto px-8 py-3">
                    <div class="flex items-center justify-end space-x-8">
                    <div class="flex items-center space-x-3">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar w-4 h-4 text-[#D4AF37]">
                            <path d="M8 2v4"></path>
                            <path d="M16 2v4"></path>
                            <rect width="18" height="18" x="3" y="4" rx="2"></rect>
                            <path d="M3 10h18"></path>
                        </svg>
                        <span class="text-white/60 text-sm" data-i18n="date">Date:</span>
                        <time class="text-white text-sm font-medium" id="currentDate"></time>
                    </div>
                    <div class="flex items-center space-x-3">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clock w-4 h-4 text-[#D4AF37]">
                            <circle cx="12" cy="12" r="10"></circle>
                            <polyline points="12 6 12 12 16 14"></polyline>
                        </svg>
                        <span class="text-white/60 text-sm" data-i18n="time">Time:</span>
                        <time class="text-white text-sm font-medium" id="currentTime"></time>
                    </div>
                    </div>
                </div>
            </div>
            <main class="container mx-auto px-8 py-6 max-w-[1400px] space-y-8">
                <div class="relative overflow-hidden">
                    <div class="absolute inset-0 bg-gradient-to-r from-[#D4AF37]/10 to-transparent"></div>
                    <div class="relative bg-[#111827]/40 backdrop-blur-md rounded-2xl p-8 border border-white/5">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-8">
                            <div class="relative">
                                <img src="/logo/nocatchphraseFinallogo.png" alt="Sarah Johnson" class="relative w-28 object-covershadow-xl">
                            </div>
                            <div>
                                <div class="flex items-center space-x-3 mb-1">
                                <div class="w-1.5 h-1.5 rounded-full bg-[#D4AF37] animate-pulse"></div>
                                <span class="text-[#D4AF37] text-sm font-medium uppercase tracking-wider">Suite {{userId}}</span>
                                </div>
                                <h2 class="text-4xl font-light text-white mb-2">
                                    <span data-i18n="welcome">Welcome,</span> <span id="username">Guest</span>
                                </h2>
                            </div>
                        </div>
                    </div>
                    </div>
                </div>
                <div class="grid grid-cols-3 gap-6">
                    <a href="https://player.mitv.bz/portal/browser.html" class="group relative bg-[#111827]/40 backdrop-blur-md rounded-2xl p-8 border border-white/5 transition-all duration-300 hover:bg-[#1a2234]/40 flex flex-col items-center justify-center">
                        <div class="absolute inset-0 bg-gradient-to-br from-purple-500/20 to-pink-500/20 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        <div class="relative flex flex-col items-center">
                            <div class="inline-flex p-4 rounded-xl bg-gradient-to-br from-purple-500 to-pink-500 shadow-lg mb-6 group-hover:scale-110 transition-transform duration-300">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-play-circle w-8 h-8 text-white">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <polygon points="10 8 16 12 10 16 10 8"></polygon>
                                </svg>
                            </div>
                            <h3 class="text-2xl font-medium text-white mb-2 group-hover:text-white/90" data-i18n="entertainment">Entertainment</h3>
                            <p class="text-white/60 group-hover:text-white/70" data-i18n="entertainmentDesc">Premium Content</p>
                        </div>
                    </a>
                    <button id="alertButton" class="group relative bg-[#111827]/40 backdrop-blur-md rounded-2xl p-8 border border-white/5 transition-all duration-300 hover:bg-[#1a2234]/40">
                    <div class="absolute inset-0 bg-gradient-to-br from-rose-500/20 to-red-500/20 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    <div class="relative flex flex-col items-center">
                        <div class="inline-flex p-4 rounded-xl bg-gradient-to-br from-rose-500 to-red-500 shadow-lg mb-6 group-hover:scale-110 transition-transform duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-bell w-8 h-8 text-white">
                                <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"></path>
                                <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0"></path>
                            </svg>
                        </div>
                        <h3 class="text-2xl font-medium text-white mb-2 group-hover:text-white/90" data-i18n="requestAssistance">Request Assistance</h3>
                        <p id="alertStatus" class="text-white/60 group-hover:text-white/70" data-i18n="requestAssistanceDesc">Request Assistance From Staff</p>
                    </div>
                    </button>
                    <a href="/user/{{userId}}/meals" class="group relative bg-[#111827]/40 backdrop-blur-md rounded-2xl p-8 border border-white/5 transition-all duration-300 hover:bg-[#1a2234]/40 flex flex-col items-center justify-center">
                    <div class="absolute inset-0 bg-gradient-to-br from-amber-500/20 to-orange-500/20 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    <div class="relative flex flex-col items-center">
                        <div class="inline-flex p-4 rounded-xl bg-gradient-to-br from-amber-500 to-orange-500 shadow-lg mb-6 group-hover:scale-110 transition-transform duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-utensils w-8 h-8 text-white">
                                <path d="M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2"></path>
                                <path d="M7 2v20"></path>
                                <path d="M21 15V2v0a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7"></path>
                            </svg>
                        </div>
                        <h3 class="text-2xl font-medium text-white mb-2 group-hover:text-white/90" data-i18n="meals">Meals</h3>
                        <p class="text-white/60 group-hover:text-white/70" data-i18n="mealsDesc">Meal Selection Service</p>
                    </div>
                    </a>
                    <button class="group relative bg-[#111827]/40 backdrop-blur-md rounded-2xl p-8 border border-white/5 transition-all duration-300 hover:bg-[#1a2234]/40">
                    <div class="absolute inset-0 bg-gradient-to-br from-blue-500/20 to-indigo-500/20 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    <div class="relative flex flex-col items-center">
                        <div class="inline-flex p-4 rounded-xl bg-gradient-to-br from-blue-500 to-indigo-500 shadow-lg mb-6 group-hover:scale-110 transition-transform duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-message-square w-8 h-8 text-white">
                                <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                            </svg>
                        </div>
                        <h3 class="text-2xl font-medium text-white mb-2 group-hover:text-white/90" data-i18n="chat">Chat</h3>
                        <p class="text-white/60 group-hover:text-white/70" data-i18n="chatDesc">Chat With Staff</p>
                    </div>
                    </button>
                    <button class="group relative bg-[#111827]/40 backdrop-blur-md rounded-2xl p-8 border border-white/5 transition-all duration-300 hover:bg-[#1a2234]/40">
                    <div class="absolute inset-0 bg-gradient-to-br from-emerald-500/20 to-teal-500/20 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    <div class="relative flex flex-col items-center">
                        <div class="inline-flex p-4 rounded-xl bg-gradient-to-br from-emerald-500 to-teal-500 shadow-lg mb-6 group-hover:scale-110 transition-transform duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-sliders w-8 h-8 text-white">
                                <line x1="4" x2="4" y1="21" y2="14"></line>
                                <line x1="4" x2="4" y1="10" y2="3"></line>
                                <line x1="12" x2="12" y1="21" y2="12"></line>
                                <line x1="12" x2="12" y1="8" y2="3"></line>
                                <line x1="20" x2="20" y1="21" y2="16"></line>
                                <line x1="20" x2="20" y1="12" y2="3"></line>
                                <line x1="2" x2="6" y1="14" y2="14"></line>
                                <line x1="10" x2="14" y1="8" y2="8"></line>
                                <line x1="18" x2="22" y1="16" y2="16"></line>
                            </svg>
                        </div>
                        <h3 class="text-2xl font-medium text-white mb-2 group-hover:text-white/90" data-i18n="roomControls">Room Controls</h3>
                        <p class="text-white/60 group-hover:text-white/70" data-i18n="roomControlsDesc">Customize Your Space</p>
                    </div>
                    </button>
                    <a href="/user/{{userId}}/settings" class="group relative bg-[#111827]/40 backdrop-blur-md rounded-2xl p-8 border border-white/5 transition-all duration-300 hover:bg-[#1a2234]/40">
                    <div class="absolute inset-0 bg-gradient-to-br from-violet-500/20 to-purple-500/20 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    <div class="relative flex flex-col items-center">
                        <div class="inline-flex p-4 rounded-xl bg-gradient-to-br from-violet-500 to-purple-500 shadow-lg mb-6 group-hover:scale-110 transition-transform duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-settings2 w-8 h-8 text-white">
                                <path d="M20 7h-9"></path>
                                <path d="M14 17H5"></path>
                                <circle cx="17" cy="17" r="3"></circle>
                                <circle cx="7" cy="7" r="3"></circle>
                            </svg>
                        </div>
                        <h3 class="text-2xl font-medium text-white mb-2 group-hover:text-white/90" data-i18n="settings">Settings</h3>
                        <p class="text-white/60 group-hover:text-white/70" data-i18n="personalizeSettings">Personalize Settings</p>
                    </div>
                    </a>
                </div>
            </main>
        </div>
        </div>

        <div class="notification" id="notification" data-i18n="requestSent">
            Request has been sent to staff
        </div>

<script src="/js/translations.js"></script>
<script>
    const socket = io({
        auth: {
            userId: document.getElementById('userId').textContent
        }
    });

    const usernameSpan = document.getElementById('username');
    const alertButton = document.getElementById('alertButton');

    // Load saved username from localStorage on page load
    const savedUsername = localStorage.getItem('username');
    if (savedUsername) {
        usernameSpan.textContent = savedUsername;
    }

    // Send saved username to server when connecting
    socket.on('connect', () => {
        if (savedUsername) {
            socket.emit('restore_username', { username: savedUsername });
        }
    });

    socket.on('connect_error', (error) => {
        if (error.message === 'Invalid ID') {
            alert('Connection failed: Invalid ID');
            alertButton.disabled = true;
        }
    });

    // Listen for username updates and save to localStorage
    socket.on('username_updated', ({ username }) => {
        usernameSpan.textContent = username;
        localStorage.setItem('username', username);
    });

    // Handle alert button click
    alertButton.addEventListener('click', () => {
        socket.emit('alert_clicked');
        alertButton.disabled = true;
        
        // Set initial status
        const alertStatus = document.getElementById('alertStatus');
        alertStatus.textContent = 'Request has been sent (30s)';
        
        // Show notification
        const notification = document.getElementById('notification');
        notification.classList.add('show');
        setTimeout(() => {
            notification.classList.remove('show');
        }, 3000);
        
        // Start countdown
        let timeLeft = 30;
        const countdownInterval = setInterval(() => {
            timeLeft--;
            if (timeLeft <= 0) {
                clearInterval(countdownInterval);
                alertButton.disabled = false;
                alertStatus.textContent = 'Request Assistance From Staff';
                alertButton.classList.remove('opacity-50', 'cursor-not-allowed');
            } else {
                alertStatus.textContent = `Request has been sent (${timeLeft}s)`;
            }
        }, 1000);

        // Add disabled styling
        alertButton.classList.add('opacity-50', 'cursor-not-allowed');
    });

    function broadcastToAdmins(event, data) {
        adminSockets.forEach(adminId => {
            io.to(adminId).emit(event, data);
        });
    }

    // Update date and time
    function updateDateTime() {
        const now = new Date();
        
        // Update date
        const dateOptions = { weekday: 'short', month: 'short', day: 'numeric' };
        document.getElementById('currentDate').textContent = now.toLocaleDateString('en-US', dateOptions);
        
        // Update time
        document.getElementById('currentTime').textContent = now.toLocaleTimeString('en-US', {
            hour: 'numeric',
            minute: '2-digit',
            hour12: true
        });
    }

    // Update immediately and then every second
    updateDateTime();
    setInterval(updateDateTime, 1000);
</script> 

<style>
    .notification {
        position: fixed;
        top: 2rem;
        right: 2rem;
        padding: 1rem 2rem;
        background: #D4AF37;
        color: white;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transform: translateX(200%);
        transition: transform 0.3s ease;
        z-index: 50;
    }

    .notification.show {
        transform: translateX(0);
    }
</style> 